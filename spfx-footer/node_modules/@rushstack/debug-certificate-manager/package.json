{
  "name": "@rushstack/debug-certificate-manager",
  "version": "1.1.66",
  "description": "Cross-platform functionality to create debug ssl certificates.",
  "main": "lib/index.js",
  "typings": "dist/debug-certificate-manager.d.ts",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/microsoft/rushstack.git",
    "type": "git",
    "directory": "libraries/debug-certificate-manager"
  },
  "dependencies": {
    "@rushstack/node-core-library": "3.50.1",
    "node-forge": "~1.3.1",
    "sudo": "~1.0.3"
  },
  "devDependencies": {
    "@rushstack/eslint-config": "3.0.0",
    "@rushstack/heft": "0.47.2",
    "@rushstack/heft-node-rig": "1.10.2",
    "@types/heft-jest": "1.0.1",
    "@types/node": "12.20.24",
    "@types/node-forge": "1.0.4"
  },
  "scripts": {
    "build": "heft build --clean",
    "_phase:build": "heft build --clean"
  },
  "readme": "# @rushstack/debug-certificate-manager\n\n## Installation\n\n`npm install @rushstack/debug-certificate-manager --save-dev`\n\n## Overview\n\nThis library contains utilities for managing debug certificates in a development server environment. It provides functions to generate, self-sign, trust, and untrust .pem certificates for both Windows and Mac OS. It will also generate self-signed certificates on other OS's, but the user must manually trust and untrust them.\n\n[![npm version](https://badge.fury.io/js/%40rushstack%2Fdebug-certificate-manager.svg)](https://badge.fury.io/js/%40rushstack%2Fdebug-certificate-manager)\n\n\n## `CertificateStore`\n\nThe `CertificateStore` class provides accessors and mutators for the debug certificate data stored in `.rushstack`.\n\nRetrive certificate data from the store:\n```typescript\nconst certificateStore: CertificateStore = new CertificateStore();\nreturn {\n  pemCertificate: certificateStore.certificateData,\n  pemKey: certificateStore.keyData\n};\n```\nSet data using the same property names `certificateData: string | undefined` and `keyData: string | undefined`.\n\n## `ensureCertificate`\n\nGet a development certificate from the store, or optionally, generate a new one and trust it if one does not exist in the store. Returns a certificate object following the `ICertificate` interface.\n\n```typescript\nexport interface ICertificate {\n  pemCertificate: string | undefined;\n  pemKey: string | undefined;\n}\n```\n\n## `untrustCertificate`\n\nAttempts to locate a previously generated debug certificate and untrust it. Returns a `boolean` value to denote success.\n\n## Links\n\n- [CHANGELOG.md](\n  https://github.com/microsoft/rushstack/blob/main/libraries/debug-certificate-manager/CHANGELOG.md) - Find\n  out what's new in the latest version\n- [API Reference](https://rushstack.io/pages/api/debug-certificate-manager/)\n\n**@rushstack/debug-certificate-manager** is part of the [Rush Stack](https://rushstack.io/) family of projects.\n"
}